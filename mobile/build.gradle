apply plugin: 'com.android.application'

android {
    // NOTE: Both debug and release are being signed here, since it's needed for testing purposes with backends.
    signingConfigs {
        config {
            // Define a signing properties file.
            String propertiesFilename = extUserHome + "/.signing/gdg.properties";
            String keystoreFilename = extUserHome+'/Google Drive/GDG Montreal Android/organizer_shared/2015.KitchenSink.jks';

            // If file exists
            if(! new File(propertiesFilename).exists()) {
                println "*** Error. Could not find signing properties file: (${propertiesFilename}) ***";
            } else if(! new File(keystoreFilename).exists()) {
                println "*** Error. Could not find keystore file: (${keystoreFilename}) ***";
            } else {
                // We found both files.
                println "*** signingConfigs: Found files for ${propertiesFilename} and ${keystoreFilename}. ***";

                println "*** signingConfigs: building config. ***";

                Properties props = new Properties()
                props.load(new FileInputStream(file(propertiesFilename)))
                storeFile file(keystoreFilename)

                storePassword props['keystore.password']
                keyAlias props['key.alias']
                keyPassword 'patateandroidesassocies'
            }

        }
    }

    compileSdkVersion extCompileSdkVersion
    buildToolsVersion extBuildToolsVersion

    compileOptions {
        sourceCompatibility extSourceCompatibility
        targetCompatibility extTargetCompatibility
    }

    defaultConfig {
        applicationId "com.android_montreal.attendance"
        minSdkVersion extMinSdkVersion
        targetSdkVersion extTargetSdkVersion
        versionName extVersionName
        signingConfig signingConfigs.config

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
//            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
        }
        mock {
//            applicationIdSuffix '.mock'
            versionNameSuffix '-mock'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Firebase needs this.
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        // Needed for Hamcrest
        exclude 'LICENSE.txt'
    }
}

task numberingScheme() {
    def source = '2.2.5.1-12-beefcafe'
    def(versionNumbers,commitNumber,hash) = source.tokenize('-')
    commitNumber = commitNumber as int
    def(versionMajor,versionMinor,versionPatch,versionBuild) = versionNumbers.tokenize('.') as Integer[]

    println "${versionNumbers}, ${versionBuild}, ${hash}"

    source.tokenize('-').each { item ->
        println "${item};"
    }

    println "${versionMajor},${versionMinor},${versionPatch}"
    println (versionMajor * 10000) ;
    def globalVersionCode = (versionMajor as int) * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild ;

    println "Global: ${globalVersionCode*100+commitNumber}"
}

apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.neenbedankt.android-apt'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    wearApp project(':wear')
    compile 'com.android.support:appcompat-v7:22.2.0'

    // TODO: Use only the needed play-services, keep method count and size low.
//    compile 'com.google.android.gms:play-services-identity:7.0.+'
//    compile 'com.google.android.gms:play-services-plus:7.0.+'
    compile 'com.google.android.gms:play-services:7.5.0'

    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'com.firebase:firebase-client-android:2.3.1'
    compile 'io.reactivex:rxandroid:0.25.0'

    compile 'com.google.dagger:dagger:2.0.1'
    apt "com.google.dagger:dagger-compiler:2.0.1"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    androidTestCompile 'com.android.support.test:runner:0.3'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
}
